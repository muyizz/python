# -*- coding: utf-8 -*-
# @Time : 2021/3/16 9:18
# @Author : yangyong
# @File : String.py

'''
概述: Python 语言中只有用于保存字符串的String类型,而没有用于保存单个字符的数据类型.
     Python 中的字符串可以写在一对单引号中,也可以写在一对双引号或一对三双引号中.
     对于不包含任何字符的字符串,如''或"",成为空字符串
'''
s1,s2='hello word',"你好"
print(s1,s2)
''' 字符串转成整数:
    int函数:第一个参数是要转换为整数的字符串(要求必须是一个整数字符串,否则报错),第二个参数是字符串中的整数的数制(不指定则默认为10,8进制,10进制,16进制)
    提示:int函数仅是将字符串中的数字直接转换为整数,不会做任何运算,当要转换的字符串是一个包含运算的表达式时,int函数会报错
'''
#例如
a=int('35')
b=int('35',16)
c=int('35',8)
d=int('35',10)
#c=int('35+1')
e=eval('a+d')
print(a,b,c,d,e)
'''字符串转换为浮点数
   float函数:只有一个参数,即要转换为浮点数的字符串(要求必须是一个整数或浮点数字符串)
   提示: 与int函数类似,float函数仅是将字符串中的数字直接转换为浮点数,不会做任何运算,当要转换的字符串是一个包含运算的表达式时,float函数会报错
'''
#例如
a1=float('35')
a2=float('35.5')
a4=float("35.22")
#a3=float("35.5+1")
#a5=float('35.5+1')
print(a1,a2,a4)

'''转义字符
\(在行尾)   续行符
\\         反斜杠符号
\'         单引号
\"         双引号
\n         换行
\r         回车
\t         制表符
'''
#例如
s1 = 'hello\
      word'  #上一行以\作为结尾,说明上一行与当前行是同一条语句
s2 = 'It\'s a book'  #使用\' 说明其是字符串中的一个单引号字符
s4 = "It's a book" #使用一对双引号的写法,字符串中可以直接使用单引号,不需要转义
s5 = "你好,欢迎些许啊实\t打实大所\n大所多" #换行  制表符
print(s1,s2,s4,s5)

'''子串截取: 利用下标'[]'可以从字符串中截取一个子串,语法格式为: s[beg:end]
   其中,s为原始字符串,beg是要截取子串在s中的起始下标,end是要截取子串子在S中的结束下标
   提示:截取子串中包含的字符是S中从beg到end-1(不包括end)位置上的字符;
       省略beg,则表示从s的开始字符进行子串截取,等价于s[0,end];
       省略end,则表截取的子串中包含从beg位置开始到最后一个字符之间的字符(包含最后一个字符);
       beg和end都省略则表示子串中包含s中所有的字符.
   下标索引方式:
        1,从前向后索引: 第一个字符的下标为0,其他字符的下标是前一字符的下标增1
        2,从后向前索引: 从后向前索引方式中,最后一个字符的下标为-1,其他的字符的下标是最后的一个字符的下标减1
     在截取子串时,既可以使用一种,也可以两种
   截取单一字符: s[idx]  其中,idx是要截取的字符串的下标.
     注意: 使用下标'[]'可以访问字符串中的元素,但不能修改.例如, s[2] = '福' 执行会报错
'''

b1 = '学习python语言程序设计'
print(b1[2:4])
print(b1[-3:-1])
print(b1[2:-1])
print(b1[:10])
print(b1[-5:])
print(b1[:])
print(b1[2])
print(b1[-2])